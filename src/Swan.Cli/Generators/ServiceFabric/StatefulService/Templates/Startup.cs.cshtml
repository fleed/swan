@using Swan.Generators.Models
@model ServiceViewModel
namespace @this.Model.Namespace
{
    using System.IO;
    using Microsoft.AspNetCore.Builder;
    using Microsoft.Extensions.Configuration;
    using Microsoft.Extensions.DependencyInjection;
    using Microsoft.Extensions.Logging;
    using Microsoft.Extensions.Options;

    using Serilog;
    using Microsoft.ServiceFabric.AspNetCore.Hosting;

    public class Startup
    {
        public Startup()
        {
            this.Configuration = new ConfigurationBuilder()
                .SetBasePath(Directory.GetCurrentDirectory())
                .AddJsonFile("appsettings.json")
                .AddJsonFile("appsettings.user.json", true)
                .Build();
        }

        public IConfigurationRoot Configuration { get; }

        // This method gets called by the runtime. Use this method to add services to the container.
        public void ConfigureServices(IServiceCollection services)
        {
            services.AddOptions();
    
            services.Configure<Settings>(Configuration.GetSection("Settings"));
            
            services.AddSingleton<IConfiguration>(Configuration);

            services.AddMvc();
            services.AddSwaggerGen();
            services.AddServiceFabricService<I@(this.Model.Name), @(this.Model.Name)>();
        }

        // This method gets called by the runtime. Use this method to configure the HTTP request pipeline.
        public void Configure(IApplicationBuilder app, ILoggerFactory loggerFactory, IOptions<Settings> settings)
        {
            Log.Logger = new LoggerConfiguration()
                .ReadFrom.Configuration(this.Configuration)
                .CreateLogger();

            app.UseDeveloperExceptionPage();
            app.UseStaticFiles();
            if (settings.Value.EnableSwagger)
            {
                app.UseSwagger().UseSwaggerUi();
            }

            if (settings.Value.EnableMvcLogging)
            {
                loggerFactory.AddSerilog();
            }

            app.UseMvc();
        }
    }
}